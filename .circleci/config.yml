# Python CircleCI 2.0 configuration file
#
# Check https://circleci.com/docs/2.0/language-python/ for more details
#
version: 2.1

orbs:
  terraform: circleci/terraform@3.1.0

tf-docker-image: &tf-docker-image
   docker:
      - image: circleci/terraform@3.2.0

node-docker-image: &node-docker-image
   docker:
      - image: circleci/node:13.8.0

aws-docker-image: &aws-docker-image
   docker:
      - image: cimg/aws:2023.01

ansible-docker-image: &ansible-docker-image
   docker:
      - image: cimg/deploy:2022.11.1

python-docker-image: &python-docker-image
   docker:
      - image: python:3.7.3-stretch

jobs:
  build-out:
    <<: *python-docker-image
    working_directory: ~/repo
    steps:
      - checkout
      #  Download and cache dependencies
      - restore_cache:
          keys:
            - v1-dependencies-{{ checksum "requirements.txt" }}
            # fallback to using the latest cache if no exact match is found
            - v1-dependencies-
      - run:
          name: install dependencies
          command: |
            python3 -m venv venv
            . venv/bin/activate
            make install
            # Install hadolint
            wget -O /bin/hadolint https://github.com/hadolint/hadolint/releases/download/v1.16.3/hadolint-Linux-x86_64 &&\
            chmod +x /bin/hadolint
      - save_cache:
          paths:
            - ./venv
          key: v1-dependencies-{{ checksum "requirements.txt" }}

      # run lint!
      - run:
          name: run lint
          command: |
            . venv/bin/activate
            make lint 

  deploy-infra:
    <<: *tf-docker-image
    steps:
      - checkout
      - terraform/init:
          path: .
      - terraform/validate:
          path: .
      - terraform/fmt:
          path: .
      # - terraform/plan:
      #     var: "TF_VAR_AWS_ACCESS_KEY_ID=$AWS_ACCESS_KEY_ID, TF_VAR_AWS_SECRET_ACCESS_KEY=$AWS_SECRET_ACCESS_KEY"
      #     path: .
      # - terraform/apply:
      #     path: .
    working_directory: ~/.circleci/files


workflows:
  build-and-test:
    jobs:
      - build-out
      - deploy-infra:
          requires:
            - build-out